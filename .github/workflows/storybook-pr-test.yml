name: Storybook Test on PR

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test-storybook:
    name: 🧪 Run Storybook Tests on PR
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: pnpm install

      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps

      - name: Build Storybook
        run: pnpm build-storybook

      - name: Install HTTP Server
        run: pnpm add -D http-server

      - name: Start Storybook server
        run: |
          npx http-server storybook-static -p 6006 &
          sleep 5

      - name: Run Storybook Tests
        id: test
        run: pnpm test-storybook --url http://127.0.0.1:6006

  comment-on-success:
    name: ✅ Comment on Success
    runs-on: ubuntu-latest
    needs: test-storybook
    if: success()

    steps:
      - name: Comment on PR (success)
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          header: storybook-test
          message: |
            ✅ **Storybook 테스트 통과!**
            이 PR에서 Storybook 테스트가 성공적으로 완료되었습니다.

            _커밋이 추가되면 테스트가 자동으로 다시 실행됩니다._

  comment-on-failure:
    name: ❌ Comment on Failure
    runs-on: ubuntu-latest
    needs: test-storybook
    if: failure()

    steps:
      - name: Comment on PR (failure)
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          header: storybook-test
          message: |
            ❌ **Storybook 테스트 실패**

            로컬에서 다음 명령으로 재현해 보세요:

            ```bash
            pnpm build-storybook
            pnpm test-storybook --url http://localhost:6006
            ```

            문제가 해결되면 커밋을 추가하면 자동으로 재실행됩니다.
