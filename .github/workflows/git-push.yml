name: Push Vercel Deploy Files to Forked Repo

on:
  push:
    branches:
      - main
      - develop

jobs:
  storybook-test:
    name: ✅ Run Storybook Tests
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ 체크아웃
      - uses: actions/checkout@v2

      # 2️⃣ pnpm 설치
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      # 3️⃣ Node 설정
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # 4️⃣ 의존성 설치
      - name: Install dependencies
        run: pnpm install

      # 5️⃣ Storybook 인터랙션 테스트를 위한 Playwright 설치
      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps

      # 6️⃣ Storybook 빌드
      - name: Build Storybook
        run: pnpm build-storybook

      # 7️⃣ 포트 6006에서 Storybook 정적 서빙
      - name: Install HTTP Server
        run: pnpm add -D http-server

      - name: Start Storybook server
        run: |
          npx http-server storybook-static -p 6006 &
          sleep 5

      # 8️⃣ 인터랙션/플레이 테스트 실행
      - name: Run Storybook tests
        run: pnpm test-storybook --url http://127.0.0.1:6006

  # 9️⃣ 테스트 통과한 경우 포크된 레포지토리에 푸시 (배포)
  sync-to-fork:
    name: 🚀 Sync to Forked Repo (Only if test passes)
    runs-on: ubuntu-latest
    needs: storybook-test

    steps:
      - uses: actions/checkout@v2

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: pnpm install

      - name: Prepare output directory
        shell: bash
        run: |
          echo "📦 Preparing deployable files..."
          mkdir -p output/src/app

          # 필수 폴더 복사
          cp -r public output/
          cp -r src output/
          cp -r .storybook output/
          cp -r storybook-static output/

          # 필수 설정 파일 복사
          cp package.json output/
          cp pnpm-lock.yaml output/
          cp README.md output/ || true
          cp next.config.mjs output/ || echo "⚠️ next.config not found"
          cp tsconfig.json output/ || echo "⚠️ tsconfig.json not found"
          cp tailwind.config.ts output/ || echo "⚠️ tailwind config not found"
          cp postcss.config.js output/ || echo "⚠️ postcss config not found"
          cp next-env.d.ts output/ || echo "⚠️ next-env.d.ts not found"

          # Tailwind 전역 스타일 포함 확인 (App Router 기준)
          if [ -f src/app/globals.css ]; then
            cp src/app/globals.css output/src/app/
          else
            echo "⚠️ globals.css not found in src/app/"
          fi

          echo "✅ Files prepared:"
          ls -la output/
          ls -la output/src/app/

      - name: Push to forked repo
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.FORKED_REPO_KEY }}
        with:
          source-directory: 'output'
          destination-github-username: 'nninyeong'
          destination-repository-name: 'ormee_web'
          user-email: ${{ secrets.DEPLOY_EMAIL }}
          commit-message: 'deploy: 배포용 파일 sync (${{ github.ref_name }})'
          target-branch: ${{ github.ref_name }}
          create-target-branch-if-needed: true
