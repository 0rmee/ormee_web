name: PR Build Status Check

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  build:
    name: 🛠️ Build & Test Project
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ PR 브랜치 코드 체크아웃
      - uses: actions/checkout@v3

      # 2️⃣ pnpm 설치
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      # 3️⃣ Node.js 환경 설정
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # 4️⃣ 의존성 설치
      - name: Install dependencies
        run: pnpm install

      # 5️⃣ Next.js 빌드
      - name: Build Next.js
        id: nextbuild
        run: |
          set -o pipefail
          pnpm build 2>&1 | tee next-build.log

      # 6️⃣ Storybook 빌드
      - name: Build Storybook
        id: storybookbuild
        run: |
          set -o pipefail
          pnpm build-storybook 2>&1 | tee sb-build.log

      # 7️⃣ Storybook Play 테스트
      - name: Run Storybook Tests
        id: storybooktest
        run: |
          set -o pipefail
          pnpm test-storybook 2>&1 | tee sb-test.log

      # 8️⃣ 모든 로그에서 실패 요약 추출
      - name: Extract error summary
        id: error
        if: failure()
        run: |
          extract_errors () {
            FILE=$1
            echo "📄 $FILE 오류 요약:"
            tail -n 50 "$FILE" | grep -i -E "error|failed|unexpected|cannot|not found" | tail -n 10 | sed 's/^/> /'
            echo ""
          }

          SUMMARY=""
          if [ -f next-build.log ]; then
            SUMMARY="${SUMMARY}$(extract_errors next-build.log)"
          fi
          if [ -f sb-build.log ]; then
            SUMMARY="${SUMMARY}$(extract_errors sb-build.log)"
          fi
          if [ -f sb-test.log ]; then
            SUMMARY="${SUMMARY}$(extract_errors sb-test.log)"
          fi

          echo "summary<<EOF" >> $GITHUB_OUTPUT
          echo "$SUMMARY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

  comment:
    name: 💬 PR 결과 요약 댓글
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Comment on PR
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          header: build-status
          message: |
            ${{ needs.build.result == 'success' && '✅ **모든 빌드 및 테스트 성공!**' || '❌ **빌드 또는 테스트 실패**' }}

            | 항목 | 결과 |
            |------|------|
            | 🔧 `pnpm build` | ${{ steps.nextbuild.outcome == 'success' && '✅ 성공' || '❌ 실패' }} |
            | 📦 `pnpm build-storybook` | ${{ steps.storybookbuild.outcome == 'success' && '✅ 성공' || '❌ 실패' }} |
            | 🧪 `pnpm test-storybook` | ${{ steps.storybooktest.outcome == 'success' && '✅ 성공' || '❌ 실패' }} |

            ${{ needs.build.result == 'failure' && format(
            '오류 요약:\n\n```\n{0}\n```\n\n🔁 로컬에서 재현해보세요:\n\n```bash\npnpm install\npnpm build\npnpm build-storybook\npnpm test-storybook\n```',
            steps.error.outputs.summary
            ) || '' }}
