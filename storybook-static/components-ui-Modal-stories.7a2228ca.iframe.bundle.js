"use strict";(self.webpackChunkormee_web=self.webpackChunkormee_web||[]).push([[353],{"./src/components/ui/Modal.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ConfirmInteraction:()=>ConfirmInteraction,Default:()=>Default,WithoutDescription:()=>WithoutDescription,WithoutTitle:()=>WithoutTitle,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Modal_stories});var jsx_runtime=__webpack_require__("./node_modules/.pnpm/next@14.1.0_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/jsx-runtime.js");function Modal({children,isOpen,onCancel,onConfirm,containerStyle,title,description}){return isOpen?(0,jsx_runtime.jsx)("div",{className:"fixed inset-0 bg-gray-90/50 flex justify-center items-center z-50",children:(0,jsx_runtime.jsxs)("div",{className:`bg-white rounded-[15px] px-[30px] py-[20px] ${containerStyle}`,children:[(0,jsx_runtime.jsxs)("div",{className:"flex flex-col w-full gap-[13px]",children:[title&&(0,jsx_runtime.jsx)("h2",{className:"text-heading1 font-semibold text-gray-90 text-center",children:title}),description&&(0,jsx_runtime.jsx)("p",{className:"text-headline2 font-normal text-gray-90 text-center",children:description})]}),children,(0,jsx_runtime.jsxs)("div",{className:"grid grid-cols-2 items-center w-[350px] h-[55px] gap-[14px]",children:[(0,jsx_runtime.jsx)("button",{className:"w-full h-[50px] px-[20px] py-[12px] rounded-[10px] bg-gray-20 text-headline1 font-bold text-gray-60",children:"취소"}),(0,jsx_runtime.jsx)("button",{className:"w-full h-[50px] px-[20px] py-[12px] rounded-[10px] bg-purple-50 text-headline1 font-bold text-white",children:"확인"})]})]})}):null}Modal.__docgenInfo={description:"",methods:[],displayName:"Modal",props:{children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"모달 내부에 표시될 컨텐츠"},isOpen:{required:!0,tsType:{name:"boolean"},description:"모달의 표시 여부를 제어하는 boolean 값"},onCancel:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"모달 취소 버튼 클릭 시 실행될 콜백 함수"},onConfirm:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"모달 확인 버튼 클릭 시 실행될 콜백 함수"},containerStyle:{required:!1,tsType:{name:"string"},description:"모달 컨테이너에 적용할 추가 스타일 클래스"},title:{required:!1,tsType:{name:"string"},description:"모달의 제목"},description:{required:!1,tsType:{name:"string"},description:"모달의 설명 텍스트"}}};var dist=__webpack_require__("./node_modules/.pnpm/@storybook+test@8.6.12_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/test/dist/index.mjs"),console=__webpack_require__("./node_modules/.pnpm/console-browserify@1.2.0/node_modules/console-browserify/index.js");const Modal_stories={title:"Components/Modal",component:Modal,parameters:{layout:"centered"},tags:["autodocs"],argTypes:{isOpen:{description:"모달의 열림 상태를 관리할 속성"},onCancel:{description:"취소 버튼 클릭 시 실행될 함수"},onConfirm:{description:"확인 버튼 클릭 시 실행될 함수"},title:{description:"모달의 제목"},description:{description:"타이틀 하단에 표시될 설명"},children:{description:"모달 내부에 표시될 요소(콘텐츠)"},containerStyle:{description:"모달 컨테이너에 적용할 추가 스타일 클래스"}}},Default={args:{isOpen:!0,title:"모달 제목",description:"모달 설명 텍스트입니다.",onCancel:()=>console.log("취소"),onConfirm:()=>console.log("확인"),children:(0,jsx_runtime.jsx)("div",{children:"모달 내용"})}},WithoutDescription={args:{isOpen:!0,title:"모달 제목",onCancel:()=>console.log("취소"),onConfirm:()=>console.log("확인"),children:(0,jsx_runtime.jsx)("div",{children:"모달 내용"})}},WithoutTitle={args:{isOpen:!0,onCancel:()=>console.log("취소"),onConfirm:()=>console.log("확인"),children:(0,jsx_runtime.jsx)("div",{children:"모달 내용"})}},ConfirmInteraction={args:{isOpen:!0,title:"확인 모달",description:"클릭 테스트용",onCancel:()=>console.log("취소 클릭"),onConfirm:()=>console.log("확인 클릭"),children:(0,jsx_runtime.jsx)("div",{children:"모달 내부"})},play:async({canvasElement})=>{const canvas=(0,dist.uh)(canvasElement),confirmButton=canvas.getByText("확인");await dist.mV.click(confirmButton),(0,dist.l_)(confirmButton).toBeInTheDocument(),(0,dist.l_)(canvas.getByText("클릭 테스트용")).toBeInTheDocument()}},__namedExportsOrder=["Default","WithoutDescription","WithoutTitle","ConfirmInteraction"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    isOpen: true,\n    title: '모달 제목',\n    description: '모달 설명 텍스트입니다.',\n    onCancel: () => console.log('취소'),\n    onConfirm: () => console.log('확인'),\n    children: <div>모달 내용</div>\n  }\n}",...Default.parameters?.docs?.source}}},WithoutDescription.parameters={...WithoutDescription.parameters,docs:{...WithoutDescription.parameters?.docs,source:{originalSource:"{\n  args: {\n    isOpen: true,\n    title: '모달 제목',\n    onCancel: () => console.log('취소'),\n    onConfirm: () => console.log('확인'),\n    children: <div>모달 내용</div>\n  }\n}",...WithoutDescription.parameters?.docs?.source}}},WithoutTitle.parameters={...WithoutTitle.parameters,docs:{...WithoutTitle.parameters?.docs,source:{originalSource:"{\n  args: {\n    isOpen: true,\n    onCancel: () => console.log('취소'),\n    onConfirm: () => console.log('확인'),\n    children: <div>모달 내용</div>\n  }\n}",...WithoutTitle.parameters?.docs?.source}}},ConfirmInteraction.parameters={...ConfirmInteraction.parameters,docs:{...ConfirmInteraction.parameters?.docs,source:{originalSource:"{\n  args: {\n    isOpen: true,\n    title: '확인 모달',\n    description: '클릭 테스트용',\n    onCancel: () => console.log('취소 클릭'),\n    onConfirm: () => console.log('확인 클릭'),\n    children: <div>모달 내부</div>\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n\n    // 확인 버튼 클릭\n    const confirmButton = canvas.getByText('확인');\n    await userEvent.click(confirmButton);\n    expect(confirmButton).toBeInTheDocument();\n\n    // 모달 설명 텍스트 확인\n    expect(canvas.getByText('클릭 테스트용')).toBeInTheDocument();\n  }\n}",...ConfirmInteraction.parameters?.docs?.source}}}}}]);